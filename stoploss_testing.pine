//@version=3
study(title="Pleo_Ross Ichimoku Only Alert Integration V6", shorttitle="PleoIchV6Alert", overlay=true)

trailPoints = input(100, "Trail Points (in ticks)", type=integer)
trailOffset = input(100, "Trail Offset (in ticks)", type=integer)
testType = input('Trail Points', "Test Points or Price", options=['Trail Points', 'Trail Price'])

//Ichimoku input Logic
conversionPeriods = input(9, minval=1, title="Conversion Line Periods"),
basePeriods = input(26, minval=1, title="Base Line Periods")
laggingSpan2Periods = input(52, minval=1, title="Lagging Span 2 Periods"),
displacement = input(26, minval=1, title="Displacement")

//Ichimoku function Logic
donchian(len) => avg(lowest(len), highest(len))

//Ichimoku line Logic
tenkanLine = donchian(conversionPeriods)
kijunLine = donchian(basePeriods)
leadLine1 = avg(tenkanLine, kijunLine)
leadLine2 = donchian(laggingSpan2Periods)

// Plot Ichimoku Cloud
// plot(tenkanLine, color=blue, linewidth=3, title="Tenkan Line")
// plot(kijunLine, color=red, linewidth=3, title="Kijun Line")
// //plot(close, offset = -displacement, color=yellow, linewidth=2, title="Chikou Lagging Span")
// p1 = plot(leadLine1, offset = displacement, color=white, title="Lead 1")
// p2 = plot(leadLine2, offset = displacement, color=white, title="Lead 2")
// fill(p1, p2, color = leadLine1 > leadLine2 ? green : red)

isAggressiveStrategy = input(false, title="Use aggressive closing of positions")
// store state of open position (whether long or short)
lastOpenPosition = 0.0
lastOpenPosition := lastOpenPosition[1]
price = 0.0
price := na

// Chikou Logic
isAboveCloud = open > leadLine1[displacement] and open > leadLine2[displacement]
isBelowCloud = open < leadLine1[displacement] and open < leadLine2[displacement]
isChikouAboveCloud = high > leadLine1[displacement * 2] and high > leadLine2[displacement * 2]
isChikouBelowCloud = low < leadLine1[displacement * 2] and low < leadLine2[displacement * 2]
isChikouAboveAllLines = isChikouAboveCloud and high > tenkanLine[displacement] and high > kijunLine[displacement] 
isChikouBelowAllLines = isChikouBelowCloud and low < tenkanLine[displacement] and low < kijunLine[displacement] 
isChikouInClearSpace = (high > (high[displacement] + 5.00) and isChikouAboveAllLines) or (low < (low[displacement] - 5.00) and isChikouBelowAllLines)
// plot(close, offset = -displacement, color=isChikouInClearSpace ? orange : yellow, linewidth=2, title="Chikou Lagging Span")
useChikou = input(false, title="Use Chikou Clear Space")

// Logic for open positions
inOpenPosition = lastOpenPosition[1] != 0
inPreviousBuy = lastOpenPosition[1] > 0
inPreviousSell = lastOpenPosition[1] < 0
isBuySignal = crossover(tenkanLine, kijunLine) and not inPreviousBuy
isSellSignal = crossunder(tenkanLine, kijunLine) and not inPreviousSell
isStrongBuySignal = isBuySignal and isAboveCloud and (useChikou ? isChikouInClearSpace : true)
isStrongSellSignal = isSellSignal and isBelowCloud and (useChikou ? isChikouInClearSpace : true)
isWeakBuySignal = isBuySignal and isBelowCloud and (useChikou ? isChikouInClearSpace : true)
isWeakSellSignal = isSellSignal and isAboveCloud and (useChikou ? isChikouInClearSpace : true)
isMediumSellSignal = (isSellSignal and not isBelowCloud and not isAboveCloud) and (useChikou ? isChikouInClearSpace : true)
isMediumBuySignal = (isBuySignal and not isBelowCloud and not isAboveCloud) and (useChikou ? isChikouInClearSpace : true)

// Logic for exit positions
isAboveAllLines = isAboveCloud and close > tenkanLine and close > kijunLine 
isBelowAllLines = isBelowCloud and close < tenkanLine and close < kijunLine 
isBuyExit = inPreviousBuy and (isAggressiveStrategy ? isBelowAllLines or crossunder(close, kijunLine) : isSellSignal) and not isSellSignal
isSellExit = inPreviousSell and (isAggressiveStrategy ? isAboveAllLines or crossover(close, kijunLine) : isBuySignal) and not isBuySignal

// Visualise the Opening positions
plotshape(isWeakBuySignal, style=shape.arrowup, location=location.abovebar, color=inPreviousBuy ? green : gray, size=size.small, text="wb")
plotshape(isMediumBuySignal, style=shape.arrowup, location=location.abovebar, color=inPreviousBuy ? green : gray, size=size.normal, text="Mb")
plotshape(isStrongBuySignal, style=shape.arrowup, location=location.abovebar, color=inPreviousBuy ? green : gray, size=size.large, text="SB")
plotshape(isWeakSellSignal, style=shape.arrowdown, location=location.belowbar, color=inPreviousSell ? red : gray, size=size.small, text="ws")
plotshape(isMediumSellSignal, style=shape.arrowdown, location=location.belowbar, color=inPreviousSell ? red : gray, size=size.normal, text="Ms")
plotshape(isStrongSellSignal, style=shape.arrowdown, location=location.belowbar, color=inPreviousSell ? red : gray, size=size.large, text="SS")
// Visualise the Exit positions
plotshape(isBuyExit, style=shape.xcross, location=location.abovebar, color=green, size=size.small)
plotshape(isSellExit, style=shape.xcross, location=location.belowbar, color=red, size=size.small)

if isBuyExit
    lastOpenPosition := 0
    price := close


if isSellExit
    lastOpenPosition := 0
    price := close


if isBuySignal
    price := close
    if isStrongBuySignal
        lastOpenPosition := 3
    else
        if isMediumBuySignal
            lastOpenPosition := 2
        else
            if isWeakBuySignal
                lastOpenPosition := 1


if isSellSignal
    price := close
    if isStrongSellSignal    
        lastOpenPosition := -3
    else
        if isMediumSellSignal    
            lastOpenPosition := -2
        else
            if isWeakSellSignal    
                lastOpenPosition := -1


// Visualise price change for open positions
// plot(price, style=line, color=inOpenPosition ? purple : white, title="Open Position")
// bgcolor(inPreviousBuy ? green : na, transp=95)
// bgcolor(inPreviousSell ? red : na, transp=95)

//Alert conditions
alertcondition(isBuyExit, title='Exit Buy', message='Close previous buy order ')
alertcondition(isSellExit, title='Exit Sell', message='Close previous sell order')

alertcondition(isWeakBuySignal, title='Weak Buy', message='Close previous sell order and Weak buy condition')
alertcondition(isMediumBuySignal, title='Medium Buy', message='Close previous sell order and Medium buy condition')
alertcondition(isStrongBuySignal, title='Strong Buy', message='Close previous sell order and Strong buy condition')
alertcondition(isWeakSellSignal, title='Weak Sell', message='Close previous buy order and Weak sell condition')
alertcondition(isMediumSellSignal, title='Medium Sell', message='Close previous buy order and Medium sell condition')
alertcondition(isStrongSellSignal, title='Strong Sell', message='Close previous buy order and Strong sell condition')

////////////////
// TRAILING STOP
////////////////
offset = input(defval=2, title="Offset %", type=float, minval=0.01, maxval=100, step=0.1)
buySrcTrigger = input(title="Buy Source trigger", type=source, defval=high)
sellSrcTrigger = input(title="Sell Source trigger", type=source, defval=low)

highest1 = buySrcTrigger
highest1 := highest1[1]
if inPreviousBuy 
    if buySrcTrigger > highest1[1]
        highest1 := buySrcTrigger
else 
    highest1 := buySrcTrigger

lowest1 = sellSrcTrigger
lowest1 := lowest1[1]
if inPreviousSell 
    if sellSrcTrigger < lowest1[1]
        lowest1 := sellSrcTrigger
else
    lowest1 := sellSrcTrigger

buyTsl = highest1 * (1-(offset/100))
plot(highest1, style=line, color=inPreviousBuy ? green : white, title="Highest Position", linewidth=1, transp=70)
plot(buyTsl, style=line, color=inPreviousBuy ? green : white, title="Highest Trailing Stop Position", linewidth=2)

sellTsl = lowest1 * (1+(offset/100))
plot(lowest1, style=line, color=inPreviousSell ? red : white, title="Lowest Position", linewidth=1, transp=70)
plot(sellTsl, style=line, color=inPreviousSell ? red : white, title="Lowest Trailing Stop Position", linewidth=2)

// plotshape(inPreviousBuy and crossunder(srctrigger,buyTsl), text="BTStop", style=shape.circle, color=orange)
// plotshape(inPreviousSell and crossunder(srctrigger,sellTsl), text="STStop", style=shape.circle, color=orange)
// alertcondition(inPreviousBuy and crossunder(srctrigger,buyTsl), title="Buy Trailing Stop alert", message="SELL")
// alertcondition(inPreviousSell and crossunder(srctrigger,sellTsl), title="Sell Trailing Stop alert", message="BUY")